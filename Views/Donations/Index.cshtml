@model IEnumerable<ChurchSystem.Models.Donations>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/dLayout.cshtml";

}
<br />

<br />
<br />
<br />
<br />
<center>
    <h2>All Donations</h2>
</center>
<br />



<br />
<br />
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>



<canvas id="barChart" width="120" height="50"></canvas>

<br />
<center>
    <h2>All Donations</h2>
</center>

<table class="table">
    <tr class="table-primary">
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().ChurchFunds.FundName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().DonorName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().DonationAmount)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().DonationDate)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ChurchFunds.FundName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DonorName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DonationAmount)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DonationDate)
            </td>

        </tr>
    }
</table>

<script>
    // Get the data from the table and format it for the chart
    var fundNames = [];
    var donationAmounts = [];

    @foreach (var item in Model)
    {
        <text>
        fundNames.push('@item.ChurchFunds.FundName');
        donationAmounts.push('@item.DonationAmount');
        </text>
    }

    // Create a bar chart using Chart.js
    var ctx = document.getElementById('barChart').getContext('2d');
    var myBarChart = new Chart(ctx, {
        type: 'bar',
        data: {
            labels: fundNames,
            datasets: [{
                label: 'Donation Amount',
                data: donationAmounts,
                backgroundColor: 'rgba(75, 192, 192, 0.2)', // Bar color
                borderColor: 'rgba(75, 192, 192, 1)', // Border color
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });
</script>


<br />
<br />
<div class="button">
    <a class="btn" href="@Url.Action("AdminHRC","Home")">Back</a>
</div>

<br />
<br />
<br />
<br />
<br />
<br />
<br />