@model ChurchSystem.Models.VenueBookingEvent

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/dLayout.cshtml";
}


<center>
    <h2>Event Details </h2>
</center>




<div class="row">

    <div class="col-md-6">

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group" style="display: none;">
                    @Html.LabelFor(model => model.VenueId, "VenueId", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("VenueId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.VenueId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group" style="display: none;">
                    @Html.LabelFor(model => model.BookingId, "BookingId", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("BookingId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.BookingId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-10">
                        Event Description
                        @Html.EditorFor(model => model.EventDescription, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EventDescription, "", new { @class = "text-danger" })
                    </div>
                </div>

                <!-- Start Time -->
                <div class="form-group">
                    <div class="col-md-10">
                        Estimated Attendees
                        @Html.EditorFor(model => model.Attendees, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Attendees, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    <div class="col-md-10">
                        Start Time: <br />
                        @Html.DropDownListFor(m => m.startTime, new SelectList(new List<SelectListItem>
                            {
                            new SelectListItem { Text = "09h00", Value = "09h00" },
                            new SelectListItem { Text = "10h00", Value = "10h00" },
                            new SelectListItem { Text = "11h00", Value = "11h00" },
                            }, "Value", "Text"), new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.layoutid, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-10">
                        End Time: <br />
                        @Html.DropDownListFor(m => m.endTime, new SelectList(new List<SelectListItem>
                            {
                            new SelectListItem { Text = "15h00", Value = "15h00" },
                            new SelectListItem { Text = "16h00", Value = "16h00" },
                            new SelectListItem { Text = "17h00", Value = "17h00" },
                            new SelectListItem { Text = "18h00", Value = "18h00" },
                            }, "Value", "Text"), new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.layoutid, "", new { @class = "text-danger" })
                    </div>
                </div>
                <br />

                <hr />
                <center>
                    Add-Ons
                    <div class="form-group">
                        <div class="col-md-10">
                            <div class="checkbox">
                                Extra Seats (+30 | R200)
                                @Html.CheckBoxFor(model => model.moreSeats, new { id = "moreSeats" })
                                @Html.ValidationMessageFor(model => model.moreSeats, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-10">
                            <div class="checkbox">
                                Post-Cleanup (R200)
                                @Html.CheckBoxFor(model => model.PostCleanup, new { id = "postCleanup" })
                                @Html.ValidationMessageFor(model => model.PostCleanup, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </center>
            </div>

            <hr />
            <center>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Proceed To Invoice" class="btn btn-outline-success" />
                    </div>
                </div>
            </center>
            <br />
            <br />
            <br />
            <br />
            <br />
        }
    </div>

    <div class="col">
        <br />
        <br />
        <center>
            <h4>Totals</h4>
            <hr />
            Bookings Fee: R350 <br />
            Add-Ons: R<span id="addonsTotal">0</span><br />
            <hr />
            <b>Total: R<span id="totalAmount">350</span><br /></b>
            <hr />           
        </center>    
    </div>
</div>


@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/dLayout.cshtml";
}



@section scripts{
    <script>
        $(document).ready(function () {
            // Base booking fee
            var bookingFee = 350;

            // Function to update total cost
            function updateTotal() {
                var addOnsTotal = 0;

                // Check if 'Extra Seats' is selected
                if ($("#moreSeats").is(":checked")) {
                    addOnsTotal += 200;
                }

                // Check if 'Post Cleanup' is selected
                if ($("#postCleanup").is(":checked")) {
                    addOnsTotal += 200;
                }

                // Update Add-Ons and Total amounts in the view
                $("#addonsTotal").text(addOnsTotal);
                $("#totalAmount").text(bookingFee + addOnsTotal);
            }

            // Trigger update on checkbox change
            $("#moreSeats, #postCleanup").change(function () {
                updateTotal();
            });

            // Initial calculation
            updateTotal();
        });
    </script>

}


